package id.bootcamp.java310.mipro.pasien.entities;

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.ColumnResult;
import javax.persistence.ConstructorResult;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedNativeQueries;
import javax.persistence.NamedNativeQuery;
import javax.persistence.SqlResultSetMapping;
import javax.persistence.SqlResultSetMappings;
import javax.persistence.Table;

import id.bootcamp.java310.mipro.global_entities.BaseProperties;
import id.bootcamp.java310.mipro.pasien.dto.PasienDTO;

@NamedNativeQueries(value = {
		@NamedNativeQuery(name = "getAllRelation", query = "SELECT ID AS CUSTOMER_RELATION_ID, NAME AS RELATION_NAME FROM M_CUSTOMER_RELATION",
				resultSetMapping = "getAllRelationResult"),

		@NamedNativeQuery(name = "getCustomerName", query = "SELECT B.ID AS BIODATA_ID,\r\n"
				+ "	B.FULLNAME,\r\n"
				+ "	C.ID AS CUSTOMER_ID\r\n"
				+ "FROM M_BIODATA B\r\n"
				+ "INNER JOIN M_CUSTOMER C ON B.ID = C.BIODATA_ID\r\n"
				+ "WHERE C.ID IN (:customer_id)",
		resultSetMapping = "getCustomerNameResult"),
		
		@NamedNativeQuery(name = "getAllPasienByCustomerID", query = "SELECT T1.BIODATA_ID,\r\n"
				+ "	T1.FULLNAME,\r\n"
				+ "	T1.ID,\r\n"
				+ "	T1.DOB,\r\n"
				+ "	T1.AGE,\r\n"
				+ "	T1.GENDER,\r\n"
				+ "	T1.BLOOD_GROUP_ID,\r\n"
				+ "	T1.CODE,\r\n"
				+ "	T1.RHESUS_TYPE,\r\n"
				+ "	T1.HEIGHT,\r\n"
				+ "	T1.WEIGHT,\r\n"
				+ "	T1.CUSTOMER_RELATION_ID,\r\n"
				+ "	T1.RELATION,\r\n"
				+ "	T1.CHAT_COUNT,\r\n"
				+ "	COUNT(A.CUSTOMER_ID) AS APPOINTMENT_COUNT\r\n"
				+ "FROM T_APPOINTMENT A\r\n"
				+ "RIGHT JOIN\r\n"
				+ "	(SELECT B.ID AS BIODATA_ID,\r\n"
				+ "			B.FULLNAME AS FULLNAME,\r\n"
				+ "			C.ID AS ID,\r\n"
				+ "	 		C.DOB AS DOB,\r\n"
				+ "			CASE\r\n"
				+ "				WHEN DATE_PART('YEAR', AGE(NOW(), C.DOB)) > 0 THEN CAST(DATE_PART('YEAR', AGE(NOW(), C.DOB)) AS TEXT) || ' ' || 'Tahun'\r\n"
				+ "				ELSE CAST(DATE_PART('MONTH', AGE(NOW(), C.DOB)) AS TEXT) || ' ' || 'Bulan'\r\n"
				+ "			END AS AGE,\r\n"
				+ "	 		C.GENDER,\r\n"
				+ "			C.BLOOD_GROUP_ID,\r\n"
				+ "	 		BG.CODE,\r\n"
				+ "			C.RHESUS_TYPE,\r\n"
				+ "			C.HEIGHT,\r\n"
				+ "			C.WEIGHT,\r\n"
				+ "	 		CM.CUSTOMER_RELATION_ID,\r\n"
				+ "			CR.NAME AS RELATION,\r\n"
				+ "			COUNT(CC.CUSTOMER_ID) AS CHAT_COUNT,\r\n"
				+ "	 		B.IS_DELETE\r\n"
				+ "		FROM M_BIODATA B\r\n"
				+ "		INNER JOIN M_CUSTOMER C ON B.ID = C.BIODATA_ID\r\n"
				+ "	 	LEFT JOIN M_BLOOD_GROUP BG ON BG.ID = C.BLOOD_GROUP_ID\r\n"
				+ "		INNER JOIN M_CUSTOMER_MEMBER CM ON C.ID = CM.CUSTOMER_ID\r\n"
				+ "		INNER JOIN M_CUSTOMER_RELATION CR ON CR.ID = CM.CUSTOMER_RELATION_ID\r\n"
				+ "		LEFT JOIN T_CUSTOMER_CHAT CC ON C.ID = CC.CUSTOMER_ID\r\n"
				+ "		WHERE CM.PARENT_BIODATA_ID = :biodata_id\r\n"
				+ "		GROUP BY B.ID,\r\n"
				+ "			B.FULLNAME,\r\n"
				+ "			C.ID,\r\n"
				+ "	 		C.DOB,\r\n"
				+ "	 		C.GENDER,\r\n"
				+ "			C.BLOOD_GROUP_ID,\r\n"
				+ "		 	BG.CODE,\r\n"
				+ "			C.RHESUS_TYPE,\r\n"
				+ "			C.HEIGHT,\r\n"
				+ "			C.WEIGHT,\r\n"
				+ "	 		CM.CUSTOMER_RELATION_ID,\r\n"
				+ "			CR.NAME,	\r\n"
				+ "			B.IS_DELETE) T1 ON T1.ID = A.CUSTOMER_ID\r\n"
				+ "WHERE T1.IS_DELETE = FALSE\r\n"
				+ "GROUP BY T1.BIODATA_ID,\r\n"
				+ "	T1.FULLNAME,\r\n"
				+ "	T1.ID,\r\n"
				+ "	T1.DOB,\r\n"
				+ "	T1.AGE,\r\n"
				+ "	T1.GENDER,\r\n"
				+ "	T1.BLOOD_GROUP_ID,\r\n"
				+ "	T1.CODE,\r\n"
				+ "	T1.RHESUS_TYPE,\r\n"
				+ "	T1.HEIGHT,\r\n"
				+ "	T1.WEIGHT,\r\n"
				+ "	T1.CUSTOMER_RELATION_ID,\r\n"
				+ "	T1.RELATION,\r\n"
				+ "	T1.CHAT_COUNT\r\n" 
				+ "ORDER BY T1.FULLNAME ASC", 
				resultSetMapping = "getAllPasienByCustomerID_Result"),
		
		@NamedNativeQuery(name = "searchPasienPerCustomer", query = "SELECT T1.BIODATA_ID,\r\n"
				+ "	T1.FULLNAME,\r\n"
				+ "	T1.ID,\r\n"
				+ "	T1.DOB,\r\n"
				+ "	T1.AGE,\r\n"
				+ "	T1.GENDER,\r\n"
				+ "	T1.BLOOD_GROUP_ID,\r\n"
				+ "	T1.CODE,\r\n"
				+ "	T1.RHESUS_TYPE,\r\n"
				+ "	T1.HEIGHT,\r\n"
				+ "	T1.WEIGHT,\r\n"
				+ "	T1.CUSTOMER_RELATION_ID,\r\n"
				+ "	T1.RELATION,\r\n"
				+ "	T1.CHAT_COUNT,\r\n"
				+ "	COUNT(A.CUSTOMER_ID) AS APPOINTMENT_COUNT\r\n"
				+ "FROM T_APPOINTMENT A\r\n"
				+ "RIGHT JOIN\r\n"
				+ "	(SELECT B.ID AS BIODATA_ID,\r\n"
				+ "			B.FULLNAME AS FULLNAME,\r\n"
				+ "			C.ID AS ID,\r\n"
				+ "	 		C.DOB AS DOB,\r\n"
				+ "			CASE\r\n"
				+ "				WHEN DATE_PART('YEAR', AGE(NOW(), C.DOB)) > 0 THEN CAST(DATE_PART('YEAR', AGE(NOW(), C.DOB)) AS TEXT) || ' ' || 'Tahun'\r\n"
				+ "				ELSE CAST(DATE_PART('MONTH', AGE(NOW(), C.DOB)) AS TEXT) || ' ' || 'Bulan'\r\n"
				+ "			END AS AGE,\r\n"
				+ "	 		C.GENDER,\r\n"
				+ "			C.BLOOD_GROUP_ID,\r\n"
				+ "	 		BG.CODE,\r\n"
				+ "			C.RHESUS_TYPE,\r\n"
				+ "			C.HEIGHT,\r\n"
				+ "			C.WEIGHT,\r\n"
				+ "	 		CM.CUSTOMER_RELATION_ID,\r\n"
				+ "			CR.NAME AS RELATION,\r\n"
				+ "			COUNT(CC.CUSTOMER_ID) AS CHAT_COUNT,\r\n"
				+ "	 		B.IS_DELETE\r\n"
				+ "		FROM M_BIODATA B\r\n"
				+ "		INNER JOIN M_CUSTOMER C ON B.ID = C.BIODATA_ID\r\n"
				+ "	 	LEFT JOIN M_BLOOD_GROUP BG ON BG.ID = C.BLOOD_GROUP_ID\r\n"
				+ "		INNER JOIN M_CUSTOMER_MEMBER CM ON C.ID = CM.CUSTOMER_ID\r\n"
				+ "		INNER JOIN M_CUSTOMER_RELATION CR ON CR.ID = CM.CUSTOMER_RELATION_ID\r\n"
				+ "		LEFT JOIN T_CUSTOMER_CHAT CC ON C.ID = CC.CUSTOMER_ID\r\n"
				+ "		WHERE CM.PARENT_BIODATA_ID = :biodata_id\r\n"
				+ "		GROUP BY B.ID,\r\n"
				+ "			B.FULLNAME,\r\n"
				+ "			C.ID,\r\n"
				+ "	 		C.DOB,\r\n"
				+ "	 		C.GENDER,\r\n"
				+ "			C.BLOOD_GROUP_ID,\r\n"
				+ "		 	BG.CODE,\r\n"
				+ "			C.RHESUS_TYPE,\r\n"
				+ "			C.HEIGHT,\r\n"
				+ "			C.WEIGHT,\r\n"
				+ "	 		CM.CUSTOMER_RELATION_ID,\r\n"
				+ "			CR.NAME,	\r\n"
				+ "			B.IS_DELETE) T1 ON T1.ID = A.CUSTOMER_ID\r\n"
				+ "WHERE fullname ilike '%' || :keyword || '%' AND T1.IS_DELETE = FALSE\r\n"
				+ "GROUP BY T1.BIODATA_ID,\r\n"
				+ "	T1.FULLNAME,\r\n"
				+ "	T1.ID,\r\n"
				+ "	T1.DOB,\r\n"
				+ "	T1.AGE,\r\n"
				+ "	T1.GENDER,\r\n"
				+ "	T1.BLOOD_GROUP_ID,\r\n"
				+ "	T1.CODE,\r\n"
				+ "	T1.RHESUS_TYPE,\r\n"
				+ "	T1.HEIGHT,\r\n"
				+ "	T1.WEIGHT,\r\n"
				+ "	T1.CUSTOMER_RELATION_ID,\r\n"
				+ "	T1.RELATION,\r\n"
				+ "	T1.CHAT_COUNT\r\n"
				+ "ORDER BY T1.FULLNAME ASC", 
				resultSetMapping = "getAllPasienByCustomerID_Result"),
		
		@NamedNativeQuery(name = "countTotalData", query = "SELECT \r\n"
				+ "	COUNT(T1.*) \r\n"
				+ "FROM (SELECT T1.BIODATA_ID,\r\n"
				+ "	T1.FULLNAME,\r\n"
				+ "	T1.ID,\r\n"
				+ "	T1.RELATION,\r\n"
				+ "	T1.AGE,\r\n"
				+ "	T1.CHAT_COUNT,\r\n"
				+ "	COUNT(A.CUSTOMER_ID) AS APPOINTMENT_COUNT,\r\n"
				+ "	T1.IS_DELETE\r\n"
				+ "FROM T_APPOINTMENT A\r\n"
				+ "RIGHT JOIN\r\n"
				+ "	(SELECT B.ID AS BIODATA_ID,\r\n"
				+ "			B.FULLNAME AS FULLNAME,\r\n"
				+ "			C.ID AS ID,\r\n"
				+ "			CR.NAME AS RELATION,\r\n"
				+ "			CASE\r\n"
				+ "				WHEN DATE_PART('YEAR', AGE(NOW(), C.DOB)) > 0 THEN CAST(DATE_PART('YEAR', AGE(NOW(), C.DOB)) AS TEXT) || ' ' || 'Tahun'\r\n"
				+ "				ELSE CAST(DATE_PART('MONTH', AGE(NOW(), C.DOB)) AS TEXT) || ' ' || 'Bulan'\r\n"
				+ "			END AS AGE,\r\n"
				+ "			COUNT(CC.CUSTOMER_ID) AS CHAT_COUNT,\r\n"
				+ "	 		B.IS_DELETE\r\n"
				+ "		FROM M_BIODATA B\r\n"
				+ "		INNER JOIN M_CUSTOMER C ON B.ID = C.BIODATA_ID\r\n"
				+ "		INNER JOIN M_CUSTOMER_MEMBER CM ON C.ID = CM.CUSTOMER_ID\r\n"
				+ "		INNER JOIN M_CUSTOMER_RELATION CR ON CR.ID = CM.CUSTOMER_RELATION_ID\r\n"
				+ "		LEFT JOIN T_CUSTOMER_CHAT CC ON C.ID = CC.CUSTOMER_ID\r\n"
				+ "		WHERE CM.PARENT_BIODATA_ID = :biodata_id AND B.IS_DELETE = FALSE\r\n"
				+ "		GROUP BY B.ID,\r\n"
				+ "			B.FULLNAME,\r\n"
				+ "			C.ID,\r\n"
				+ "			CR.NAME,	\r\n"
				+ "			B.IS_DELETE) T1 ON T1.ID = A.CUSTOMER_ID\r\n"
				+ "WHERE fullname ilike '%' || :keyword || '%' \r\n"
				+ "GROUP BY T1.BIODATA_ID,\r\n"
				+ "	T1.FULLNAME,\r\n"
				+ "	T1.ID,\r\n"
				+ "	T1.RELATION,\r\n"
				+ "	T1.AGE,\r\n"
				+ "	T1.CHAT_COUNT,\r\n"
				+ "	T1.IS_DELETE) T1\r\n"),
		
		@NamedNativeQuery(name = "paginationPasienPerCustomer", query = "SELECT T1.BIODATA_ID,\r\n"
				+ "	T1.FULLNAME,\r\n"
				+ "	T1.ID,\r\n"
				+ "	T1.DOB,\r\n"
				+ "	T1.AGE,\r\n"
				+ "	T1.GENDER,\r\n"
				+ "	T1.BLOOD_GROUP_ID,\r\n"
				+ "	T1.CODE,\r\n"
				+ "	T1.RHESUS_TYPE,\r\n"
				+ "	T1.HEIGHT,\r\n"
				+ "	T1.WEIGHT,\r\n"
				+ "	T1.CUSTOMER_RELATION_ID,\r\n"
				+ "	T1.RELATION,\r\n"
				+ "	T1.CHAT_COUNT,\r\n"
				+ "	COUNT(A.CUSTOMER_ID) AS APPOINTMENT_COUNT\r\n"
				+ "FROM T_APPOINTMENT A\r\n"
				+ "RIGHT JOIN\r\n"
				+ "	(SELECT B.ID AS BIODATA_ID,\r\n"
				+ "			B.FULLNAME AS FULLNAME,\r\n"
				+ "			C.ID AS ID,\r\n"
				+ "	 		C.DOB AS DOB,\r\n"
				+ "			CASE\r\n"
				+ "				WHEN DATE_PART('YEAR', AGE(NOW(), C.DOB)) > 0 THEN CAST(DATE_PART('YEAR', AGE(NOW(), C.DOB)) AS TEXT) || ' ' || 'Tahun'\r\n"
				+ "				ELSE CAST(DATE_PART('MONTH', AGE(NOW(), C.DOB)) AS TEXT) || ' ' || 'Bulan'\r\n"
				+ "			END AS AGE,\r\n"
				+ "	 		C.GENDER,\r\n"
				+ "			C.BLOOD_GROUP_ID,\r\n"
				+ "	 		BG.CODE,\r\n"
				+ "			C.RHESUS_TYPE,\r\n"
				+ "			C.HEIGHT,\r\n"
				+ "			C.WEIGHT,\r\n"
				+ "	 		CM.CUSTOMER_RELATION_ID,\r\n"
				+ "			CR.NAME AS RELATION,\r\n"
				+ "			COUNT(CC.CUSTOMER_ID) AS CHAT_COUNT,\r\n"
				+ "	 		B.IS_DELETE\r\n"
				+ "		FROM M_BIODATA B\r\n"
				+ "		INNER JOIN M_CUSTOMER C ON B.ID = C.BIODATA_ID\r\n"
				+ "	 	LEFT JOIN M_BLOOD_GROUP BG ON BG.ID = C.BLOOD_GROUP_ID\r\n"
				+ "		INNER JOIN M_CUSTOMER_MEMBER CM ON C.ID = CM.CUSTOMER_ID\r\n"
				+ "		INNER JOIN M_CUSTOMER_RELATION CR ON CR.ID = CM.CUSTOMER_RELATION_ID\r\n"
				+ "		LEFT JOIN T_CUSTOMER_CHAT CC ON C.ID = CC.CUSTOMER_ID\r\n"
				+ "		WHERE CM.PARENT_BIODATA_ID = :biodata_id\r\n"
				+ "		GROUP BY B.ID,\r\n"
				+ "			B.FULLNAME,\r\n"
				+ "			C.ID,\r\n"
				+ "	 		C.DOB,\r\n"
				+ "	 		C.GENDER,\r\n"
				+ "			C.BLOOD_GROUP_ID,\r\n"
				+ "		 	BG.CODE,\r\n"
				+ "			C.RHESUS_TYPE,\r\n"
				+ "			C.HEIGHT,\r\n"
				+ "			C.WEIGHT,\r\n"
				+ "	 		CM.CUSTOMER_RELATION_ID,\r\n"
				+ "			CR.NAME,	\r\n"
				+ "			B.IS_DELETE) T1 ON T1.ID = A.CUSTOMER_ID\r\n"
				+ "WHERE fullname ilike '%' || :keyword || '%' AND T1.IS_DELETE = FALSE\r\n"
				+ "GROUP BY T1.BIODATA_ID,\r\n"
				+ "	T1.FULLNAME,\r\n"
				+ "	T1.ID,\r\n"
				+ "	T1.DOB,\r\n"
				+ "	T1.AGE,\r\n"
				+ "	T1.GENDER,\r\n"
				+ "	T1.BLOOD_GROUP_ID,\r\n"
				+ "	T1.CODE,\r\n"
				+ "	T1.RHESUS_TYPE,\r\n"
				+ "	T1.HEIGHT,\r\n"
				+ "	T1.WEIGHT,\r\n"
				+ "	T1.CUSTOMER_RELATION_ID,\r\n"
				+ "	T1.RELATION,\r\n"
				+ "	T1.CHAT_COUNT\r\n"
				+ "LIMIT :limit OFFSET :offset", 
				resultSetMapping = "getAllPasienByCustomerID_Result"),
		
		@NamedNativeQuery(name = "sortByPaginationPasienPerCustomerNameASC", query = "SELECT T1.BIODATA_ID,\r\n"
				+ "	T1.FULLNAME,\r\n"
				+ "	T1.ID,\r\n"
				+ "	T1.DOB,\r\n"
				+ "	T1.AGE,\r\n"
				+ "	T1.GENDER,\r\n"
				+ "	T1.BLOOD_GROUP_ID,\r\n"
				+ "	T1.CODE,\r\n"
				+ "	T1.RHESUS_TYPE,\r\n"
				+ "	T1.HEIGHT,\r\n"
				+ "	T1.WEIGHT,\r\n"
				+ "	T1.CUSTOMER_RELATION_ID,\r\n"
				+ "	T1.RELATION,\r\n"
				+ "	T1.CHAT_COUNT,\r\n"
				+ "	COUNT(A.CUSTOMER_ID) AS APPOINTMENT_COUNT\r\n"
				+ "FROM T_APPOINTMENT A\r\n"
				+ "RIGHT JOIN\r\n"
				+ "	(SELECT B.ID AS BIODATA_ID,\r\n"
				+ "			B.FULLNAME AS FULLNAME,\r\n"
				+ "			C.ID AS ID,\r\n"
				+ "	 		C.DOB AS DOB,\r\n"
				+ "			CASE\r\n"
				+ "				WHEN DATE_PART('YEAR', AGE(NOW(), C.DOB)) > 0 THEN CAST(DATE_PART('YEAR', AGE(NOW(), C.DOB)) AS TEXT) || ' ' || 'Tahun'\r\n"
				+ "				ELSE CAST(DATE_PART('MONTH', AGE(NOW(), C.DOB)) AS TEXT) || ' ' || 'Bulan'\r\n"
				+ "			END AS AGE,\r\n"
				+ "	 		C.GENDER,\r\n"
				+ "			C.BLOOD_GROUP_ID,\r\n"
				+ "	 		BG.CODE,\r\n"
				+ "			C.RHESUS_TYPE,\r\n"
				+ "			C.HEIGHT,\r\n"
				+ "			C.WEIGHT,\r\n"
				+ "	 		CM.CUSTOMER_RELATION_ID,\r\n"
				+ "			CR.NAME AS RELATION,\r\n"
				+ "			COUNT(CC.CUSTOMER_ID) AS CHAT_COUNT,\r\n"
				+ "	 		B.IS_DELETE\r\n"
				+ "		FROM M_BIODATA B\r\n"
				+ "		INNER JOIN M_CUSTOMER C ON B.ID = C.BIODATA_ID\r\n"
				+ "	 	LEFT JOIN M_BLOOD_GROUP BG ON BG.ID = C.BLOOD_GROUP_ID\r\n"
				+ "		INNER JOIN M_CUSTOMER_MEMBER CM ON C.ID = CM.CUSTOMER_ID\r\n"
				+ "		INNER JOIN M_CUSTOMER_RELATION CR ON CR.ID = CM.CUSTOMER_RELATION_ID\r\n"
				+ "		LEFT JOIN T_CUSTOMER_CHAT CC ON C.ID = CC.CUSTOMER_ID\r\n"
				+ "		WHERE CM.PARENT_BIODATA_ID = :biodata_id\r\n"
				+ "		GROUP BY B.ID,\r\n"
				+ "			B.FULLNAME,\r\n"
				+ "			C.ID,\r\n"
				+ "	 		C.DOB,\r\n"
				+ "	 		C.GENDER,\r\n"
				+ "			C.BLOOD_GROUP_ID,\r\n"
				+ "		 	BG.CODE,\r\n"
				+ "			C.RHESUS_TYPE,\r\n"
				+ "			C.HEIGHT,\r\n"
				+ "			C.WEIGHT,\r\n"
				+ "	 		CM.CUSTOMER_RELATION_ID,\r\n"
				+ "			CR.NAME,	\r\n"
				+ "			B.IS_DELETE) T1 ON T1.ID = A.CUSTOMER_ID\r\n"
				+ "WHERE fullname ilike '%' || :keyword || '%' AND T1.IS_DELETE = FALSE\r\n"
				+ "GROUP BY T1.BIODATA_ID,\r\n"
				+ "	T1.FULLNAME,\r\n"
				+ "	T1.ID,\r\n"
				+ "	T1.DOB,\r\n"
				+ "	T1.AGE,\r\n"
				+ "	T1.GENDER,\r\n"
				+ "	T1.BLOOD_GROUP_ID,\r\n"
				+ "	T1.CODE,\r\n"
				+ "	T1.RHESUS_TYPE,\r\n"
				+ "	T1.HEIGHT,\r\n"
				+ "	T1.WEIGHT,\r\n"
				+ "	T1.CUSTOMER_RELATION_ID,\r\n"
				+ "	T1.RELATION,\r\n"
				+ "	T1.CHAT_COUNT\r\n"
				+ "ORDER BY FULLNAME ASC\r\n"
				+ "LIMIT :limit OFFSET :offset", 
				resultSetMapping = "getAllPasienByCustomerID_Result"),
		
		@NamedNativeQuery(name = "sortByPaginationPasienPerCustomerNameDESC", query = "SELECT T1.BIODATA_ID,\r\n"
				+ "	T1.FULLNAME,\r\n"
				+ "	T1.ID,\r\n"
				+ "	T1.DOB,\r\n"
				+ "	T1.AGE,\r\n"
				+ "	T1.GENDER,\r\n"
				+ "	T1.BLOOD_GROUP_ID,\r\n"
				+ "	T1.CODE,\r\n"
				+ "	T1.RHESUS_TYPE,\r\n"
				+ "	T1.HEIGHT,\r\n"
				+ "	T1.WEIGHT,\r\n"
				+ "	T1.CUSTOMER_RELATION_ID,\r\n"
				+ "	T1.RELATION,\r\n"
				+ "	T1.CHAT_COUNT,\r\n"
				+ "	COUNT(A.CUSTOMER_ID) AS APPOINTMENT_COUNT\r\n"
				+ "FROM T_APPOINTMENT A\r\n"
				+ "RIGHT JOIN\r\n"
				+ "	(SELECT B.ID AS BIODATA_ID,\r\n"
				+ "			B.FULLNAME AS FULLNAME,\r\n"
				+ "			C.ID AS ID,\r\n"
				+ "	 		C.DOB AS DOB,\r\n"
				+ "			CASE\r\n"
				+ "				WHEN DATE_PART('YEAR', AGE(NOW(), C.DOB)) > 0 THEN CAST(DATE_PART('YEAR', AGE(NOW(), C.DOB)) AS TEXT) || ' ' || 'Tahun'\r\n"
				+ "				ELSE CAST(DATE_PART('MONTH', AGE(NOW(), C.DOB)) AS TEXT) || ' ' || 'Bulan'\r\n"
				+ "			END AS AGE,\r\n"
				+ "	 		C.GENDER,\r\n"
				+ "			C.BLOOD_GROUP_ID,\r\n"
				+ "	 		BG.CODE,\r\n"
				+ "			C.RHESUS_TYPE,\r\n"
				+ "			C.HEIGHT,\r\n"
				+ "			C.WEIGHT,\r\n"
				+ "	 		CM.CUSTOMER_RELATION_ID,\r\n"
				+ "			CR.NAME AS RELATION,\r\n"
				+ "			COUNT(CC.CUSTOMER_ID) AS CHAT_COUNT,\r\n"
				+ "	 		B.IS_DELETE\r\n"
				+ "		FROM M_BIODATA B\r\n"
				+ "		INNER JOIN M_CUSTOMER C ON B.ID = C.BIODATA_ID\r\n"
				+ "	 	LEFT JOIN M_BLOOD_GROUP BG ON BG.ID = C.BLOOD_GROUP_ID\r\n"
				+ "		INNER JOIN M_CUSTOMER_MEMBER CM ON C.ID = CM.CUSTOMER_ID\r\n"
				+ "		INNER JOIN M_CUSTOMER_RELATION CR ON CR.ID = CM.CUSTOMER_RELATION_ID\r\n"
				+ "		LEFT JOIN T_CUSTOMER_CHAT CC ON C.ID = CC.CUSTOMER_ID\r\n"
				+ "		WHERE CM.PARENT_BIODATA_ID = :biodata_id\r\n"
				+ "		GROUP BY B.ID,\r\n"
				+ "			B.FULLNAME,\r\n"
				+ "			C.ID,\r\n"
				+ "	 		C.DOB,\r\n"
				+ "	 		C.GENDER,\r\n"
				+ "			C.BLOOD_GROUP_ID,\r\n"
				+ "		 	BG.CODE,\r\n"
				+ "			C.RHESUS_TYPE,\r\n"
				+ "			C.HEIGHT,\r\n"
				+ "			C.WEIGHT,\r\n"
				+ "	 		CM.CUSTOMER_RELATION_ID,\r\n"
				+ "			CR.NAME,	\r\n"
				+ "			B.IS_DELETE) T1 ON T1.ID = A.CUSTOMER_ID\r\n"
				+ "WHERE fullname ilike '%' || :keyword || '%' AND T1.IS_DELETE = FALSE\r\n"
				+ "GROUP BY T1.BIODATA_ID,\r\n"
				+ "	T1.FULLNAME,\r\n"
				+ "	T1.ID,\r\n"
				+ "	T1.DOB,\r\n"
				+ "	T1.AGE,\r\n"
				+ "	T1.GENDER,\r\n"
				+ "	T1.BLOOD_GROUP_ID,\r\n"
				+ "	T1.CODE,\r\n"
				+ "	T1.RHESUS_TYPE,\r\n"
				+ "	T1.HEIGHT,\r\n"
				+ "	T1.WEIGHT,\r\n"
				+ "	T1.CUSTOMER_RELATION_ID,\r\n"
				+ "	T1.RELATION,\r\n"
				+ "	T1.CHAT_COUNT\r\n"
				+ "ORDER BY FULLNAME DESC\r\n"
				+ "LIMIT :limit OFFSET :offset", 
				resultSetMapping = "getAllPasienByCustomerID_Result"),
		
		@NamedNativeQuery(name = "sortByPaginationPasienPerCustomerChatASC", query = "SELECT T1.BIODATA_ID,\r\n"
				+ "	T1.FULLNAME,\r\n"
				+ "	T1.ID,\r\n"
				+ "	T1.DOB,\r\n"
				+ "	T1.AGE,\r\n"
				+ "	T1.GENDER,\r\n"
				+ "	T1.BLOOD_GROUP_ID,\r\n"
				+ "	T1.CODE,\r\n"
				+ "	T1.RHESUS_TYPE,\r\n"
				+ "	T1.HEIGHT,\r\n"
				+ "	T1.WEIGHT,\r\n"
				+ "	T1.CUSTOMER_RELATION_ID,\r\n"
				+ "	T1.RELATION,\r\n"
				+ "	T1.CHAT_COUNT,\r\n"
				+ "	COUNT(A.CUSTOMER_ID) AS APPOINTMENT_COUNT\r\n"
				+ "FROM T_APPOINTMENT A\r\n"
				+ "RIGHT JOIN\r\n"
				+ "	(SELECT B.ID AS BIODATA_ID,\r\n"
				+ "			B.FULLNAME AS FULLNAME,\r\n"
				+ "			C.ID AS ID,\r\n"
				+ "	 		C.DOB AS DOB,\r\n"
				+ "			CASE\r\n"
				+ "				WHEN DATE_PART('YEAR', AGE(NOW(), C.DOB)) > 0 THEN CAST(DATE_PART('YEAR', AGE(NOW(), C.DOB)) AS TEXT) || ' ' || 'Tahun'\r\n"
				+ "				ELSE CAST(DATE_PART('MONTH', AGE(NOW(), C.DOB)) AS TEXT) || ' ' || 'Bulan'\r\n"
				+ "			END AS AGE,\r\n"
				+ "	 		C.GENDER,\r\n"
				+ "			C.BLOOD_GROUP_ID,\r\n"
				+ "	 		BG.CODE,\r\n"
				+ "			C.RHESUS_TYPE,\r\n"
				+ "			C.HEIGHT,\r\n"
				+ "			C.WEIGHT,\r\n"
				+ "	 		CM.CUSTOMER_RELATION_ID,\r\n"
				+ "			CR.NAME AS RELATION,\r\n"
				+ "			COUNT(CC.CUSTOMER_ID) AS CHAT_COUNT,\r\n"
				+ "	 		B.IS_DELETE\r\n"
				+ "		FROM M_BIODATA B\r\n"
				+ "		INNER JOIN M_CUSTOMER C ON B.ID = C.BIODATA_ID\r\n"
				+ "	 	LEFT JOIN M_BLOOD_GROUP BG ON BG.ID = C.BLOOD_GROUP_ID\r\n"
				+ "		INNER JOIN M_CUSTOMER_MEMBER CM ON C.ID = CM.CUSTOMER_ID\r\n"
				+ "		INNER JOIN M_CUSTOMER_RELATION CR ON CR.ID = CM.CUSTOMER_RELATION_ID\r\n"
				+ "		LEFT JOIN T_CUSTOMER_CHAT CC ON C.ID = CC.CUSTOMER_ID\r\n"
				+ "		WHERE CM.PARENT_BIODATA_ID = :biodata_id\r\n"
				+ "		GROUP BY B.ID,\r\n"
				+ "			B.FULLNAME,\r\n"
				+ "			C.ID,\r\n"
				+ "	 		C.DOB,\r\n"
				+ "	 		C.GENDER,\r\n"
				+ "			C.BLOOD_GROUP_ID,\r\n"
				+ "		 	BG.CODE,\r\n"
				+ "			C.RHESUS_TYPE,\r\n"
				+ "			C.HEIGHT,\r\n"
				+ "			C.WEIGHT,\r\n"
				+ "	 		CM.CUSTOMER_RELATION_ID,\r\n"
				+ "			CR.NAME,	\r\n"
				+ "			B.IS_DELETE) T1 ON T1.ID = A.CUSTOMER_ID\r\n"
				+ "WHERE fullname ilike '%' || :keyword || '%' AND T1.IS_DELETE = FALSE\r\n"
				+ "GROUP BY T1.BIODATA_ID,\r\n"
				+ "	T1.FULLNAME,\r\n"
				+ "	T1.ID,\r\n"
				+ "	T1.DOB,\r\n"
				+ "	T1.AGE,\r\n"
				+ "	T1.GENDER,\r\n"
				+ "	T1.BLOOD_GROUP_ID,\r\n"
				+ "	T1.CODE,\r\n"
				+ "	T1.RHESUS_TYPE,\r\n"
				+ "	T1.HEIGHT,\r\n"
				+ "	T1.WEIGHT,\r\n"
				+ "	T1.CUSTOMER_RELATION_ID,\r\n"
				+ "	T1.RELATION,\r\n"
				+ "	T1.CHAT_COUNT\r\n"
				+ "ORDER BY CHAT_COUNT ASC\r\n"
				+ "LIMIT :limit OFFSET :offset", 
				resultSetMapping = "getAllPasienByCustomerID_Result"),
		
		@NamedNativeQuery(name = "sortByPaginationPasienPerCustomerChatDESC", query = "SELECT T1.BIODATA_ID,\r\n"
				+ "	T1.FULLNAME,\r\n"
				+ "	T1.ID,\r\n"
				+ "	T1.DOB,\r\n"
				+ "	T1.AGE,\r\n"
				+ "	T1.GENDER,\r\n"
				+ "	T1.BLOOD_GROUP_ID,\r\n"
				+ "	T1.CODE,\r\n"
				+ "	T1.RHESUS_TYPE,\r\n"
				+ "	T1.HEIGHT,\r\n"
				+ "	T1.WEIGHT,\r\n"
				+ "	T1.CUSTOMER_RELATION_ID,\r\n"
				+ "	T1.RELATION,\r\n"
				+ "	T1.CHAT_COUNT,\r\n"
				+ "	COUNT(A.CUSTOMER_ID) AS APPOINTMENT_COUNT\r\n"
				+ "FROM T_APPOINTMENT A\r\n"
				+ "RIGHT JOIN\r\n"
				+ "	(SELECT B.ID AS BIODATA_ID,\r\n"
				+ "			B.FULLNAME AS FULLNAME,\r\n"
				+ "			C.ID AS ID,\r\n"
				+ "	 		C.DOB AS DOB,\r\n"
				+ "			CASE\r\n"
				+ "				WHEN DATE_PART('YEAR', AGE(NOW(), C.DOB)) > 0 THEN CAST(DATE_PART('YEAR', AGE(NOW(), C.DOB)) AS TEXT) || ' ' || 'Tahun'\r\n"
				+ "				ELSE CAST(DATE_PART('MONTH', AGE(NOW(), C.DOB)) AS TEXT) || ' ' || 'Bulan'\r\n"
				+ "			END AS AGE,\r\n"
				+ "	 		C.GENDER,\r\n"
				+ "			C.BLOOD_GROUP_ID,\r\n"
				+ "	 		BG.CODE,\r\n"
				+ "			C.RHESUS_TYPE,\r\n"
				+ "			C.HEIGHT,\r\n"
				+ "			C.WEIGHT,\r\n"
				+ "	 		CM.CUSTOMER_RELATION_ID,\r\n"
				+ "			CR.NAME AS RELATION,\r\n"
				+ "			COUNT(CC.CUSTOMER_ID) AS CHAT_COUNT,\r\n"
				+ "	 		B.IS_DELETE\r\n"
				+ "		FROM M_BIODATA B\r\n"
				+ "		INNER JOIN M_CUSTOMER C ON B.ID = C.BIODATA_ID\r\n"
				+ "	 	LEFT JOIN M_BLOOD_GROUP BG ON BG.ID = C.BLOOD_GROUP_ID\r\n"
				+ "		INNER JOIN M_CUSTOMER_MEMBER CM ON C.ID = CM.CUSTOMER_ID\r\n"
				+ "		INNER JOIN M_CUSTOMER_RELATION CR ON CR.ID = CM.CUSTOMER_RELATION_ID\r\n"
				+ "		LEFT JOIN T_CUSTOMER_CHAT CC ON C.ID = CC.CUSTOMER_ID\r\n"
				+ "		WHERE CM.PARENT_BIODATA_ID = :biodata_id\r\n"
				+ "		GROUP BY B.ID,\r\n"
				+ "			B.FULLNAME,\r\n"
				+ "			C.ID,\r\n"
				+ "	 		C.DOB,\r\n"
				+ "	 		C.GENDER,\r\n"
				+ "			C.BLOOD_GROUP_ID,\r\n"
				+ "		 	BG.CODE,\r\n"
				+ "			C.RHESUS_TYPE,\r\n"
				+ "			C.HEIGHT,\r\n"
				+ "			C.WEIGHT,\r\n"
				+ "	 		CM.CUSTOMER_RELATION_ID,\r\n"
				+ "			CR.NAME,	\r\n"
				+ "			B.IS_DELETE) T1 ON T1.ID = A.CUSTOMER_ID\r\n"
				+ "WHERE fullname ilike '%' || :keyword || '%' AND T1.IS_DELETE = FALSE\r\n"
				+ "GROUP BY T1.BIODATA_ID,\r\n"
				+ "	T1.FULLNAME,\r\n"
				+ "	T1.ID,\r\n"
				+ "	T1.DOB,\r\n"
				+ "	T1.AGE,\r\n"
				+ "	T1.GENDER,\r\n"
				+ "	T1.BLOOD_GROUP_ID,\r\n"
				+ "	T1.CODE,\r\n"
				+ "	T1.RHESUS_TYPE,\r\n"
				+ "	T1.HEIGHT,\r\n"
				+ "	T1.WEIGHT,\r\n"
				+ "	T1.CUSTOMER_RELATION_ID,\r\n"
				+ "	T1.RELATION,\r\n"
				+ "	T1.CHAT_COUNT\r\n"
				+ "ORDER BY CHAT_COUNT DESC\r\n"
				+ "LIMIT :limit OFFSET :offset", 
				resultSetMapping = "getAllPasienByCustomerID_Result"),
		
		@NamedNativeQuery(name = "sortByPaginationPasienPerCustomerAppointmentASC", query = "SELECT T1.BIODATA_ID,\r\n"
				+ "	T1.FULLNAME,\r\n"
				+ "	T1.ID,\r\n"
				+ "	T1.DOB,\r\n"
				+ "	T1.AGE,\r\n"
				+ "	T1.GENDER,\r\n"
				+ "	T1.BLOOD_GROUP_ID,\r\n"
				+ "	T1.CODE,\r\n"
				+ "	T1.RHESUS_TYPE,\r\n"
				+ "	T1.HEIGHT,\r\n"
				+ "	T1.WEIGHT,\r\n"
				+ "	T1.CUSTOMER_RELATION_ID,\r\n"
				+ "	T1.RELATION,\r\n"
				+ "	T1.CHAT_COUNT,\r\n"
				+ "	COUNT(A.CUSTOMER_ID) AS APPOINTMENT_COUNT\r\n"
				+ "FROM T_APPOINTMENT A\r\n"
				+ "RIGHT JOIN\r\n"
				+ "	(SELECT B.ID AS BIODATA_ID,\r\n"
				+ "			B.FULLNAME AS FULLNAME,\r\n"
				+ "			C.ID AS ID,\r\n"
				+ "	 		C.DOB AS DOB,\r\n"
				+ "			CASE\r\n"
				+ "				WHEN DATE_PART('YEAR', AGE(NOW(), C.DOB)) > 0 THEN CAST(DATE_PART('YEAR', AGE(NOW(), C.DOB)) AS TEXT) || ' ' || 'Tahun'\r\n"
				+ "				ELSE CAST(DATE_PART('MONTH', AGE(NOW(), C.DOB)) AS TEXT) || ' ' || 'Bulan'\r\n"
				+ "			END AS AGE,\r\n"
				+ "	 		C.GENDER,\r\n"
				+ "			C.BLOOD_GROUP_ID,\r\n"
				+ "	 		BG.CODE,\r\n"
				+ "			C.RHESUS_TYPE,\r\n"
				+ "			C.HEIGHT,\r\n"
				+ "			C.WEIGHT,\r\n"
				+ "	 		CM.CUSTOMER_RELATION_ID,\r\n"
				+ "			CR.NAME AS RELATION,\r\n"
				+ "			COUNT(CC.CUSTOMER_ID) AS CHAT_COUNT,\r\n"
				+ "	 		B.IS_DELETE\r\n"
				+ "		FROM M_BIODATA B\r\n"
				+ "		INNER JOIN M_CUSTOMER C ON B.ID = C.BIODATA_ID\r\n"
				+ "	 	LEFT JOIN M_BLOOD_GROUP BG ON BG.ID = C.BLOOD_GROUP_ID\r\n"
				+ "		INNER JOIN M_CUSTOMER_MEMBER CM ON C.ID = CM.CUSTOMER_ID\r\n"
				+ "		INNER JOIN M_CUSTOMER_RELATION CR ON CR.ID = CM.CUSTOMER_RELATION_ID\r\n"
				+ "		LEFT JOIN T_CUSTOMER_CHAT CC ON C.ID = CC.CUSTOMER_ID\r\n"
				+ "		WHERE CM.PARENT_BIODATA_ID = :biodata_id\r\n"
				+ "		GROUP BY B.ID,\r\n"
				+ "			B.FULLNAME,\r\n"
				+ "			C.ID,\r\n"
				+ "	 		C.DOB,\r\n"
				+ "	 		C.GENDER,\r\n"
				+ "			C.BLOOD_GROUP_ID,\r\n"
				+ "		 	BG.CODE,\r\n"
				+ "			C.RHESUS_TYPE,\r\n"
				+ "			C.HEIGHT,\r\n"
				+ "			C.WEIGHT,\r\n"
				+ "	 		CM.CUSTOMER_RELATION_ID,\r\n"
				+ "			CR.NAME,	\r\n"
				+ "			B.IS_DELETE) T1 ON T1.ID = A.CUSTOMER_ID\r\n"
				+ "WHERE fullname ilike '%' || :keyword || '%' AND T1.IS_DELETE = FALSE\r\n"
				+ "GROUP BY T1.BIODATA_ID,\r\n"
				+ "	T1.FULLNAME,\r\n"
				+ "	T1.ID,\r\n"
				+ "	T1.DOB,\r\n"
				+ "	T1.AGE,\r\n"
				+ "	T1.GENDER,\r\n"
				+ "	T1.BLOOD_GROUP_ID,\r\n"
				+ "	T1.CODE,\r\n"
				+ "	T1.RHESUS_TYPE,\r\n"
				+ "	T1.HEIGHT,\r\n"
				+ "	T1.WEIGHT,\r\n"
				+ "	T1.CUSTOMER_RELATION_ID,\r\n"
				+ "	T1.RELATION,\r\n"
				+ "	T1.CHAT_COUNT\r\n"
				+ "ORDER BY APPOINTMENT_COUNT ASC\r\n"
				+ "LIMIT :limit OFFSET :offset", 
				resultSetMapping = "getAllPasienByCustomerID_Result"),
		
		@NamedNativeQuery(name = "sortByPaginationPasienPerCustomerAppointmentDESC", query = "SELECT T1.BIODATA_ID,\r\n"
				+ "	T1.FULLNAME,\r\n"
				+ "	T1.ID,\r\n"
				+ "	T1.DOB,\r\n"
				+ "	T1.AGE,\r\n"
				+ "	T1.GENDER,\r\n"
				+ "	T1.BLOOD_GROUP_ID,\r\n"
				+ "	T1.CODE,\r\n"
				+ "	T1.RHESUS_TYPE,\r\n"
				+ "	T1.HEIGHT,\r\n"
				+ "	T1.WEIGHT,\r\n"
				+ "	T1.CUSTOMER_RELATION_ID,\r\n"
				+ "	T1.RELATION,\r\n"
				+ "	T1.CHAT_COUNT,\r\n"
				+ "	COUNT(A.CUSTOMER_ID) AS APPOINTMENT_COUNT\r\n"
				+ "FROM T_APPOINTMENT A\r\n"
				+ "RIGHT JOIN\r\n"
				+ "	(SELECT B.ID AS BIODATA_ID,\r\n"
				+ "			B.FULLNAME AS FULLNAME,\r\n"
				+ "			C.ID AS ID,\r\n"
				+ "	 		C.DOB AS DOB,\r\n"
				+ "			CASE\r\n"
				+ "				WHEN DATE_PART('YEAR', AGE(NOW(), C.DOB)) > 0 THEN CAST(DATE_PART('YEAR', AGE(NOW(), C.DOB)) AS TEXT) || ' ' || 'Tahun'\r\n"
				+ "				ELSE CAST(DATE_PART('MONTH', AGE(NOW(), C.DOB)) AS TEXT) || ' ' || 'Bulan'\r\n"
				+ "			END AS AGE,\r\n"
				+ "	 		C.GENDER,\r\n"
				+ "			C.BLOOD_GROUP_ID,\r\n"
				+ "	 		BG.CODE,\r\n"
				+ "			C.RHESUS_TYPE,\r\n"
				+ "			C.HEIGHT,\r\n"
				+ "			C.WEIGHT,\r\n"
				+ "	 		CM.CUSTOMER_RELATION_ID,\r\n"
				+ "			CR.NAME AS RELATION,\r\n"
				+ "			COUNT(CC.CUSTOMER_ID) AS CHAT_COUNT,\r\n"
				+ "	 		B.IS_DELETE\r\n"
				+ "		FROM M_BIODATA B\r\n"
				+ "		INNER JOIN M_CUSTOMER C ON B.ID = C.BIODATA_ID\r\n"
				+ "	 	LEFT JOIN M_BLOOD_GROUP BG ON BG.ID = C.BLOOD_GROUP_ID\r\n"
				+ "		INNER JOIN M_CUSTOMER_MEMBER CM ON C.ID = CM.CUSTOMER_ID\r\n"
				+ "		INNER JOIN M_CUSTOMER_RELATION CR ON CR.ID = CM.CUSTOMER_RELATION_ID\r\n"
				+ "		LEFT JOIN T_CUSTOMER_CHAT CC ON C.ID = CC.CUSTOMER_ID\r\n"
				+ "		WHERE CM.PARENT_BIODATA_ID = :biodata_id\r\n"
				+ "		GROUP BY B.ID,\r\n"
				+ "			B.FULLNAME,\r\n"
				+ "			C.ID,\r\n"
				+ "	 		C.DOB,\r\n"
				+ "	 		C.GENDER,\r\n"
				+ "			C.BLOOD_GROUP_ID,\r\n"
				+ "		 	BG.CODE,\r\n"
				+ "			C.RHESUS_TYPE,\r\n"
				+ "			C.HEIGHT,\r\n"
				+ "			C.WEIGHT,\r\n"
				+ "	 		CM.CUSTOMER_RELATION_ID,\r\n"
				+ "			CR.NAME,	\r\n"
				+ "			B.IS_DELETE) T1 ON T1.ID = A.CUSTOMER_ID\r\n"
				+ "WHERE fullname ilike '%' || :keyword || '%' AND T1.IS_DELETE = FALSE\r\n"
				+ "GROUP BY T1.BIODATA_ID,\r\n"
				+ "	T1.FULLNAME,\r\n"
				+ "	T1.ID,\r\n"
				+ "	T1.DOB,\r\n"
				+ "	T1.AGE,\r\n"
				+ "	T1.GENDER,\r\n"
				+ "	T1.BLOOD_GROUP_ID,\r\n"
				+ "	T1.CODE,\r\n"
				+ "	T1.RHESUS_TYPE,\r\n"
				+ "	T1.HEIGHT,\r\n"
				+ "	T1.WEIGHT,\r\n"
				+ "	T1.CUSTOMER_RELATION_ID,\r\n"
				+ "	T1.RELATION,\r\n"
				+ "	T1.CHAT_COUNT\r\n"
				+ "ORDER BY APPOINTMENT_COUNT DESC\r\n"
				+ "LIMIT :limit OFFSET :offset", 
				resultSetMapping = "getAllPasienByCustomerID_Result")
})

@SqlResultSetMappings(value = {
		@SqlResultSetMapping(name = "getAllRelationResult", classes = @ConstructorResult(targetClass = PasienDTO.class,
				columns = {
					@ColumnResult(name = "customer_relation_id", type = Long.class),	
					@ColumnResult(name = "relation_name", type = String.class)	
				})),

		@SqlResultSetMapping(name = "getCustomerNameResult", classes = @ConstructorResult(targetClass = PasienDTO.class,
		columns = {
				@ColumnResult(name = "biodata_id", type = Long.class),	
				@ColumnResult(name = "fullname", type = String.class),	
				@ColumnResult(name = "customer_id", type = Long.class)	
		})),
		
		@SqlResultSetMapping(name = "getAllPasienByCustomerID_Result", classes = @ConstructorResult(targetClass = PasienDTO.class, 
				columns = {
						@ColumnResult(name = "biodata_id", type = Long.class),
						@ColumnResult(name = "fullname", type = String.class),
						@ColumnResult(name = "id", type = Long.class),
						@ColumnResult(name = "dob", type = Date.class),
						@ColumnResult(name = "age", type = String.class),
						@ColumnResult(name = "gender", type = String.class),
						@ColumnResult(name = "blood_group_id", type = Long.class),
						@ColumnResult(name = "code", type = String.class),
						@ColumnResult(name = "rhesus_type", type = String.class),
						@ColumnResult(name = "height", type = BigDecimal.class),
						@ColumnResult(name = "weight", type = BigDecimal.class),
						@ColumnResult(name = "customer_relation_id", type = Long.class),
						@ColumnResult(name = "relation", type = String.class),
						@ColumnResult(name = "chat_count", type = Integer.class),
						@ColumnResult(name = "appointment_count", type = Integer.class)
				}))
})

@Entity
@Table(name = "m_customer_member")
public class M_Customer_Member extends BaseProperties {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(nullable = false)
	private Long id;
	
	private Long parent_biodata_id;
	
	private Long customer_id;
	
	private Long customer_relation_id;

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public Long getParent_biodata_id() {
		return parent_biodata_id;
	}

	public void setParent_biodata_id(Long parent_biodata_id) {
		this.parent_biodata_id = parent_biodata_id;
	}

	public Long getCustomer_id() {
		return customer_id;
	}

	public void setCustomer_id(Long customer_id) {
		this.customer_id = customer_id;
	}

	public Long getCustomer_relation_id() {
		return customer_relation_id;
	}

	public void setCustomer_relation_id(Long customer_relation_id) {
		this.customer_relation_id = customer_relation_id;
	}
	
}
